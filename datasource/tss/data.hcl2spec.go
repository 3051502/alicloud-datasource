// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package tss

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	Username  *string `mapstructure:"username" require:"true" cty:"username" hcl:"username"`
	Password  *string `mapstructure:"password" require:"true" cty:"password" hcl:"password"`
	ServerURL *string `mapstructure:"server_url" require:"true" cty:"server_url" hcl:"server_url"`
	SecretID  *int    `mapstructure:"secret_id" required:"true" cty:"secret_id" hcl:"secret_id"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"username":   &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"password":   &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
		"server_url": &hcldec.AttrSpec{Name: "server_url", Type: cty.String, Required: false},
		"secret_id":  &hcldec.AttrSpec{Name: "secret_id", Type: cty.Number, Required: false},
	}
	return s
}

// FlatDatasourceOutput is an auto-generated flat version of DatasourceOutput.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatDatasourceOutput struct {
	ID       *int    `mapstructure:"id" cty:"id" hcl:"id"`
	Username *string `mapstructure:"username" cty:"username" hcl:"username"`
	Password *string `mapstructure:"password" cty:"password" hcl:"password"`
}

// FlatMapstructure returns a new FlatDatasourceOutput.
// FlatDatasourceOutput is an auto-generated flat version of DatasourceOutput.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*DatasourceOutput) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatDatasourceOutput)
}

// HCL2Spec returns the hcl spec of a DatasourceOutput.
// This spec is used by HCL to read the fields of DatasourceOutput.
// The decoded values from this spec will then be applied to a FlatDatasourceOutput.
func (*FlatDatasourceOutput) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"id":       &hcldec.AttrSpec{Name: "id", Type: cty.Number, Required: false},
		"username": &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"password": &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
	}
	return s
}
